--- /Users/francisdb/vpinball/tables/Iron Maiden (Original 2022) VPW 1.0.12.vbs.original	2023-06-15 14:42:23
+++ /Users/francisdb/vpinball/tables/Iron Maiden (Original 2022) VPW 1.0.12.vbs	2023-06-15 14:25:37
@@ -82,7 +82,7 @@
 
 '*************************** PuP Settings for this table ********************************
 
-usePUP   = true               ' enable Pinup Player functions for this table
+usePUP   = false               ' enable Pinup Player functions for this table
 cPuPPack = "pup-pack_name"    ' name of the PuP-Pack / PuPVideos folder for this table
 
 '**************************
@@ -263,7 +263,7 @@
 		PuPlayer.playlistplayex pOverVid,"PupOverlays","clear1.png", 1, 1
 		PuPlayer.PlayStop pOverVid
 		PuPlayer.playlistplayex pOverVid,"Callouts","blank.mp4", 1, 1
-		PuPlayer.SetLoop pOverVid, 1
+		'PuPlayer.SetLoop pOverVid, 1
 
 		PuPlayer.LabelSet pOverVid,"ServiceL1","IRON MAIDEN" 												,1,"{'mt':2,'ypos':25,'size':5}"
 		PuPlayer.LabelSet pOverVid,"ServiceL2","V" & myVersion & "    SYS. 2.35.0    OS. 2.00.16" 		,1,"{'mt':2,'ypos':35,'size':5}"
@@ -287,7 +287,7 @@
 					End if 
 					PuPlayer.LabelShowPage pOverVid, 1,0,""
 					PuPlayer.PlayStop pOverVid
-					PuPlayer.SetLoop pOverVid, 0
+					'PuPlayer.SetLoop pOverVid, 0
 
 				case kMenuAdj:
 					serviceLevel=kMenuNone
@@ -557,7 +557,7 @@
 			PuPlayer.playlistplayex pOverVid,"PupOverlays","clear1.png", 1, 1
 			PuPlayer.PlayStop pOverVid
 			PuPlayer.playlistplayex pOverVid,"Callouts","blank.mp4", 1, 1
-			PuPlayer.SetLoop pOverVid, 1
+			'PuPlayer.SetLoop pOverVid, 1
 		End if 
 
 		PuPlayer.LabelSet pOverVid,"ServiceL1",""						 									,1,"{'mt':2,'ypos':65,'size':5}"
@@ -592,7 +592,7 @@
 	PuPlayer.LabelShowPage pDMDFull, 2, 0,""		' Show Blank Page so it doesnt overlap (We shouldnt need this but labels are popping over)
 	PuPlayer.LabelShowPage pOverVid, 1,0,""
 	PuPlayer.PlayStop pOverVid
-	PuPlayer.SetLoop pOverVid, 0
+	'PuPlayer.SetLoop pOverVid, 0
 
 End Sub 
 
@@ -7956,7 +7956,40 @@
 '******************************************************
 '  DROP TARGETS INITIALIZATION
 '******************************************************
+
+Class DropTarget
+	Private m_primary, m_secondary, m_prim, m_sw, m_animate, m_isDropped
+  
+	Public Property Get Primary(): Set Primary = m_primary: End Property
+	Public Property Let Primary(input): Set m_primary = input: End Property
 
+	Public Property Get Secondary(): Set Secondary = m_secondary: End Property
+	Public Property Let Secondary(input): Set m_secondary = input: End Property
+  
+	Public Property Get Prim(): Set Prim = m_prim: End Property
+	Public Property Let Prim(input): Set m_prim = input: End Property
+  
+	Public Property Get Sw(): Sw = m_sw: End Property
+	Public Property Let Sw(input): m_sw = input: End Property
+  
+	Public Property Get Animate(): Animate = m_animate: End Property
+	Public Property Let Animate(input): m_animate = input: End Property
+  
+	Public Property Get IsDropped(): IsDropped = m_isDropped: End Property
+	Public Property Let IsDropped(input): m_isDropped = input: End Property
+  
+	Public default Function init(primary, secondary, prim, sw, animate, isDropped)
+	  Set m_primary = primary
+	  Set m_secondary = secondary
+	  Set m_prim = prim
+	  m_sw = sw
+	  m_animate = animate
+	  m_isDropped = isDropped
+  
+	  Set Init = Me
+	End Function
+  End Class
+
 'Define a variable for each drop target
 Dim DT1, DT2, DT3
 
@@ -7976,9 +8009,9 @@
 '
 '	Values for annimate: 1 - bend target (hit to primary), 2 - drop target (hit to secondary), 3 - brick target (high velocity hit to secondary), -1 - raise target 
 
-DT1 = Array(Target004, Target004a, Target004p, 1, 0)
-DT2 = Array(Target005, Target005a, Target005p, 2, 0)
-DT3 = Array(Target006, Target006a, Target006p, 3, 0)
+Set DT1 = (new DropTarget)(Target004, Target004a, Target004p, 1, 0, false)
+Set DT2 = (new DropTarget)(Target005, Target005a, Target005p, 2, 0, false)
+Set DT3 = (new DropTarget)(Target006, Target006a, Target006p, 3, 0, false)
 
 
 Dim DTArray
@@ -8027,9 +8060,9 @@
 	DTArray_IsDropped(i)=1
 
 	PlayTargetSound
-	DTArray(i)(4) =  DTCheckBrick(Activeball,DTArray(i)(2))
-	If DTArray(i)(4) = 1 or DTArray(i)(4) = 3 or DTArray(i)(4) = 4 Then
-		DTBallPhysics Activeball, DTArray(i)(2).rotz, DTMass
+	DTArray(i).animate =  DTCheckBrick(Activeball,DTArray(i).prim)
+	If DTArray(i).animate = 1 or DTArray(i).animate = 3 or DTArray(i).animate = 4 Then
+		DTBallPhysics Activeball, DTArray(i).prim.rotz, DTMass
 	End If
 'WriteToLog "     ", "DTHit:(" & i & ") " & DTArray(i)(4)
 	DoDTAnim
@@ -8042,7 +8075,7 @@
 	i = DTArrayID(switch)
 	DTArray_IsDropped(i)=0
 
-	DTArray(i)(4) = -1
+	DTArray(i).animate = -1
 	DoDTAnim
 End Sub
 
@@ -8051,14 +8084,14 @@
 	i = DTArrayID(switch)
 	DTArray_IsDropped(i)=1
 
-	DTArray(i)(4) = 1
+	DTArray(i).animate = 1
 	DoDTAnim
 End Sub
 
 Function DTArrayID(switch)
 	Dim i
 	For i = 0 to uBound(DTArray) 
-		If DTArray(i)(3) = switch Then DTArrayID = i:Exit Function 
+		If DTArray(i).sw = switch Then DTArrayID = i:Exit Function 
 	Next
 End Function
 
@@ -8117,7 +8150,7 @@
 Sub DoDTAnim()
 	Dim i
 	For i=0 to Ubound(DTArray)
-		DTArray(i)(4) = DTAnimate(DTArray(i)(0),DTArray(i)(1),DTArray(i)(2),DTArray(i)(3),DTArray(i)(4))
+		DTArray(i).animate = DTAnimate(DTArray(i).primary,DTArray(i).secondary 	,DTArray(i).prim,DTArray(i).sw,DTArray(i).animate)
 	Next
 End Sub
 
@@ -8601,8 +8634,37 @@
 	if TypeName(n)="LightDummy" then exit sub 	' Fake Light, cant set the color 
 WriteToLog "     ", "SetLightColorTimed:" & n.name & " " & col
 	dim vL, pL
-	Execute "set vL=v" & n.name
-	Execute "set pL=p" & n.name
+	' TODO these two don't work
+	Execute ("set vL=v" & n.name)
+	Execute ("set pL=p" & n.name)
+
+	'i = LampNameToIdx(n.name)
+	Select Case n.name
+		Case "lCaptiveBall" vL = vlCaptiveBall: pL = plCaptiveBall
+		Case "lLoopRight" vL = vlLoopRight: pL = plLoopRight
+		Case "lLoopLeft" vL = vlLoopLeft: pL = plLoopLeft		
+		Case "lRampCenter" vL = vlRampCenter: pL = plRampCenter		
+		Case "lRampLeft" vL = vlRampLeft: pL = plRampLeft	
+		Case "lRampRight" vL = vlRampRight: pL = plRampRight	
+		Case "lOrbitLeft" vL = vlOrbitLeft: pL = plOrbitLeft		
+		Case "lOrbitRight" vL = vlOrbitRight: pL = plOrbitRight	
+		Case "lSpinnerLeft" vL = vlSpinnerLeft: pL = plSpinnerLeft
+		Case "lSpinnerRight" vL = vlSpinnerRight: pL = plSpinnerRight
+		Case "lLightLock" vL = vlLightLock: pL = plLightLock
+		Case "lLightOrb" vL = vlLightOrb: pL = plLightOrb
+		Case "lBonusX" vL = vlBonusX: pL = plBonusX
+		Case "lTargetX1" vL = vlTargetX1: pL = plTargetX1
+		Case "lTargetX2" vL = vlTargetX2: pL = plTargetX2
+		Case "lTargetX3" vL = vlTargetX3: pL = plTargetX3
+		Case "lTargetX4" vL = vlTargetX4: pL = plTargetX4
+		Case "lJackpot" vL = vlJackpot: pL = plJackpot
+		Case "lPowerSpinner" vL = vlPowerSpinner: pL = plPowerSpinner
+		Case "lPowerPops" vL = vlPowerPops: pL = plPowerPops
+		Case "lPowerRamps" vL = vlPowerRamps: pL = plPowerRamps
+		Case "lPowerTargets" vL = vlPowerTargets: pL = plPowerTargets
+		Case "lPowerOrbits" vL = vlPowerOrbits: pL = plPowerOrbits																		
+		Case Else debug.Print "SetLightColorTimed: unknown light " & n.name
+	End Select	
 
 	'UpdateMaterial(string, float wrapLighting, float roughness, float glossyImageLerp, float thickness, float edge, float edgeAlpha, float opacity, OLE_COLOR base, OLE_COLOR glossy, OLE_COLOR clearcoat, VARIANT_BOOL isMetal, VARIANT_BOOL opacityActive, float elasticity, float elasticityFalloff, float friction, float scatterAngle)
 
@@ -14019,7 +14081,7 @@
 
 		if bDropSweep then 
 			bDropSweep=False
-			CheckDrops (tgtIndex+1) Mod 3
+			CheckDrops ((tgtIndex+1) Mod 3)
 		else 
 			vpmtimer.addtimer 1000, "ResetDrop '"
 		End if 
@@ -17424,7 +17486,7 @@
 			case 3:
 				PuPlayer.playlistplayex pDMDFull,"FlightOfIcarus","Flight BG Loop.mp4", cVolBGVideo*0, 1
 		End Select 
-		PuPlayer.SetLoop pDMDFull, 1
+		'PuPlayer.SetLoop pDMDFull, 1
 
 		PuPlayer.LabelSet pDMDFull, "SplashImg", "PupOverlays\\clear.png", 1, ""
 		PuPlayer.LabelSet pDMDFull, "Splash1", "", 1, ""
@@ -17541,7 +17603,7 @@
 		playclear pDMDFull
 		pAttractReset=-1:PriorityReset=574720
 		PuPlayer.playlistplayex pDMDFull,"Backglass","Tour.mp4", cVolBGVideo*100, 1
-		PuPlayer.SetLoop pDMDFull, 1
+		'PuPlayer.SetLoop pDMDFull, 1
 		PuPlayer.LabelSet pDMDFull, "SplashImg", "PupOverlays\\clear.png", 1, ""
 		PuPlayer.LabelSet pDMDFull, "Splash1", "",			      1, "{'mt':2, 'size':9, 'ypos':78, 'color':" & pupColorGrey & "}"
 		PuPlayer.LabelSet pDMDFull, "Splash2", "", 1, "{'mt':2, 'size':9, 'ypos':90, 'color':" & RGB(132,89,39) & "}"
@@ -17560,7 +17622,7 @@
 			case 3:
 				PuPlayer.playlistplayex pDMDFull,"FlightOfIcarus","Flight BG Loop.mp4", cVolBGVideo*0, 1
 		End Select 
-		PuPlayer.SetLoop pDMDFull, 1
+		'PuPlayer.SetLoop pDMDFull, 1
 		PuPlayer.LabelSet pDMDFull, "SplashImg", "PupOverlays\\Songs.png", 1, "{'mt':2,'width':100,'height':100, 'xalign':0, 'yalign':0}"
 		PuPlayer.LabelSet pDMDFull, "Splash1", "",			      1, "{'mt':2, 'size':9, 'ypos':78, 'color':" & pupColorGrey & "}"
 		PuPlayer.LabelSet pDMDFull, "Splash2", "", 1, "{'mt':2, 'size':9, 'ypos':90, 'color':" & RGB(132,89,39) & "}"
@@ -17571,7 +17633,7 @@
 		playclear pDMDFull
 		pAttractReset=-1:PriorityReset=2000
 		PuPlayer.playlistplayex pDMDFull,"Eddie","Eddie.mp4", cVolBGVideo*100, 1
-		PuPlayer.SetLoop pDMDFull, 1		
+		'PuPlayer.SetLoop pDMDFull, 1		
 
 		ClearAttract
 
@@ -17643,7 +17705,7 @@
 	TimerStats_Enabled=bEnable
 	If bEnable Then
 		PuPlayer.playlistplayex pDMDFull,"Backglass","Cloud.mp4", cVolBGVideo*100, 1
-		PuPlayer.SetLoop pDMDFull, 1
+		'PuPlayer.SetLoop pDMDFull, 1
 		PuPlayer.LabelSet pDMDFull, "SplashImg1", "Backglass\\Stone1.png", 1, "{'mt':2,'width':100,'height':100, 'xalign':0, 'yalign':2, 'ypos':100, 'zback':1}"
 		PuPlayer.LabelSet pDMDFull, "SplashImg2", "Backglass\\Stone2.png", 1, "{'mt':2,'width':100,'height':100, 'xalign':0, 'yalign':0, 'ypos':100, 'zback':1}"
 		PuPlayer.LabelSet pDMDFull, "Splash1", HighScoreName(0),	      1, "{'mt':2, 'size':9, 'ypos':78, 'color':" & pupColorBrown & "}"
@@ -20719,7 +20781,7 @@
 		playmedia VideoName, VideoPath, Screen, "", -1, "", vol, 1
 		if bLoop then 
 			'PuPlayer.SetBackGround screen, 1
-			PuPlayer.SetLoop Screen, 1
+			'PuPlayer.SetLoop Screen, 1
 		End If 
 	End if 
 
@@ -22630,6 +22692,7 @@
 	End Sub
 			
 	sub playclear(chan)
+		if usePUP = False then Exit Sub 
 		WriteToLog "     ", "play clear'd " & chan
 		bMediaSet(chan) = False
 		bMediaPaused(chan) = False
@@ -22645,8 +22708,8 @@
 '		End If
 
 		if chan = pDMDFull Then
-			PuPlayer.SetLoop chan, 0
-			PuPlayer.playstop chan
+			'PuPlayer.SetLoop chan, 0
+			'PuPlayer.playstop chan
 		End If
 
 '		if chan = pBonusScreen then 
@@ -22656,7 +22719,7 @@
 '		End If 
 
 		if chan = pMusic Then
-			PuPlayer.SetLoop pMusic, 0
+			'PuPlayer.SetLoop pMusic, 0
 			PuPlayer.playstop pMusic
 			curSong=""
 '			'PuPlayer.SendMSG "{ ""mt"":301, ""SN"": " & pMusic &", ""FN"":11, ""VL"":0 }"
@@ -22668,7 +22731,7 @@
 'WriteToLog "     ", "Clear is cancelling " & currentqueue
 			End If 
 			PuPlayer.SetBackGround pBackglass, 0
-			PuPlayer.SetLoop pBackglass, 0
+			'PuPlayer.SetLoop pBackglass, 0
 			PuPlayer.playstop pBackglass
 		end if 
 	end Sub
@@ -22754,7 +22817,7 @@
 		PuPlayer.playlistplayex channel,playlist,name,audiolevel,priority
 		if channel = pBackglass then PuPlayer.SetBackGround channel, 1
 '		if channel = pAudio then PuPlayer.SetLoop channel, 1
-		if channel = pMusic and length=-1 then PuPlayer.SetLoop channel, 1
+		'if channel = pMusic and length=-1 then PuPlayer.SetLoop channel, 1
 '		if channel = pBonusScreen then PuPlayer.SetLoop channel, 1
 
 '		If channel = pCallouts and length <> -1 Then
