--- "Laser Cue (Williams 1984) w VR Room 2.0.0.vbs.original"	2023-12-11 19:41:41.969888562 +0100
+++ "Laser Cue (Williams 1984) w VR Room 2.0.0.vbs"	2023-12-11 19:39:48.166826103 +0100
@@ -1847,15 +1847,48 @@
 '  DROP TARGETS INITIALIZATION
 '******************************************************
 
+Class DropTarget
+  Private m_primary, m_secondary, m_prim, m_sw, m_animate, m_isDropped
+
+  Public Property Get Primary(): Set Primary = m_primary: End Property
+  Public Property Let Primary(input): Set m_primary = input: End Property
+
+  Public Property Get Secondary(): Set Secondary = m_secondary: End Property
+  Public Property Let Secondary(input): Set m_secondary = input: End Property
+
+  Public Property Get Prim(): Set Prim = m_prim: End Property
+  Public Property Let Prim(input): Set m_prim = input: End Property
+
+  Public Property Get Sw(): Sw = m_sw: End Property
+  Public Property Let Sw(input): m_sw = input: End Property
+
+  Public Property Get Animate(): Animate = m_animate: End Property
+  Public Property Let Animate(input): m_animate = input: End Property
+
+  Public Property Get IsDropped(): IsDropped = m_isDropped: End Property
+  Public Property Let IsDropped(input): m_isDropped = input: End Property
+
+  Public default Function init(primary, secondary, prim, sw, animate, isDropped)
+    Set m_primary = primary
+    Set m_secondary = secondary
+    Set m_prim = prim
+    m_sw = sw
+    m_animate = animate
+    m_isDropped = isDropped
+
+    Set Init = Me
+  End Function
+End Class
+
 'Define a variable for each drop target
 
 Dim DT33, DT34, DT35, DT36, DT37
 
-DT33 = Array(sw33, sw33a, sw33p, 33, 0, false)
-DT34 = Array(sw34, sw34a, sw34p, 34, 0, false)
-DT35 = Array(sw35, sw35a, sw35p, 35, 0, false)
-DT36 = Array(sw36, sw36a, sw36p, 36, 0, false)
-DT37 = Array(sw37, sw37a, sw37p, 37, 0, false)
+Set DT33 = (new DropTarget)(sw33, sw33a, sw33p, 33, 0, false)
+Set DT34 = (new DropTarget)(sw34, sw34a, sw34p, 34, 0, false)
+Set DT35 = (new DropTarget)(sw35, sw35a, sw35p, 35, 0, false)
+Set DT36 = (new DropTarget)(sw36, sw36a, sw36p, 36, 0, false)
+Set DT37 = (new DropTarget)(sw37, sw37a, sw37p, 37, 0, false)
 
 
 Dim DTArray
@@ -1887,9 +1920,9 @@
 	Dim i, swmod
 	i = DTArrayID(switch)
 	PlayTargetSound
-	DTArray(i)(4) =  DTCheckBrick(Activeball,DTArray(i)(2))
-	If DTArray(i)(4) = 1 or DTArray(i)(4) = 3 or DTArray(i)(4) = 4 Then
-		DTBallPhysics Activeball, DTArray(i)(2).rotz, DTMass
+	DTArray(i).animate =  DTCheckBrick(Activeball,DTArray(i).prim)
+	If DTArray(i).animate = 1 or DTArray(i).animate = 3 or DTArray(i).animate = 4 Then
+		DTBallPhysics Activeball, DTArray(i).prim.rotz, DTMass
 	End If
 	DoDTAnim
 End Sub
@@ -1898,7 +1931,7 @@
 	Dim i
 	i = DTArrayID(switch)
 
-	DTArray(i)(4) = -1
+	DTArray(i).animate = -1
 	DoDTAnim
 End Sub
 
@@ -1906,14 +1939,14 @@
 	Dim i
 	i = DTArrayID(switch)
 
-	DTArray(i)(4) = 1
+	DTArray(i).animate = 1
 	DoDTAnim
 End Sub
 
 Function DTArrayID(switch)
 	Dim i
 	For i = 0 to uBound(DTArray) 
-		If DTArray(i)(3) = switch Then DTArrayID = i:Exit Function 
+		If DTArray(i).sw = switch Then DTArrayID = i:Exit Function 
 	Next
 End Function
 
@@ -1968,7 +2001,7 @@
 Sub DoDTAnim()
 	Dim i
 	For i=0 to Ubound(DTArray)
-		DTArray(i)(4) = DTAnimate(DTArray(i)(0),DTArray(i)(1),DTArray(i)(2),DTArray(i)(3),DTArray(i)(4))
+		DTArray(i).animate = DTAnimate(DTArray(i).primary,DTArray(i).secondary,DTArray(i).prim,DTArray(i).sw,DTArray(i).animate)
 	Next
 End Sub
 
@@ -2024,7 +2057,7 @@
 		if prim.transz <= -DTDropUnits Then 
 			prim.transz = -DTDropUnits
 			secondary.collidable = 0
-			DTArray(ind)(5) = true 'Mark target as dropped
+			DTArray(ind).isDropped = true 'Mark target as dropped
 			if UsingROM then 
 				controller.Switch(Switchid) = 1
 			else 
@@ -2082,7 +2115,7 @@
 		end if
 		primary.collidable = 0
 		secondary.collidable = 1
-		DTArray(ind)(5) = false 'Mark target as not dropped
+		DTArray(ind).isDropped = false 'Mark target as not dropped
 		if UsingROM then controller.Switch(Switchid) = 0
 
 	End If
@@ -2156,16 +2189,41 @@
 
 Dim ST20, ST21, ST22, ST23, ST25, ST26, ST27, ST38, ST39, ST40
 
-ST20 = Array(sw20, psw20,20, 0)
-ST21 = Array(sw21, psw21,21, 0)
-ST22 = Array(sw22, psw22,22, 0)
-ST23 = Array(sw23, psw23,23, 0)
-ST25 = Array(sw25, psw25,25, 0)
-ST26 = Array(sw26, psw26,26, 0)
-ST27 = Array(sw27, psw27,27, 0)
-ST38 = Array(sw38, psw38,38, 0)
-ST39 = Array(sw39, psw39,39, 0)
-ST40 = Array(sw40, psw40,40, 0)
+Class StandupTarget
+  Private m_primary, m_prim, m_sw, m_animate
+
+  Public Property Get Primary(): Set Primary = m_primary: End Property
+  Public Property Let Primary(input): Set m_primary = input: End Property
+
+  Public Property Get Prim(): Set Prim = m_prim: End Property
+  Public Property Let Prim(input): Set m_prim = input: End Property
+
+  Public Property Get Sw(): Sw = m_sw: End Property
+  Public Property Let Sw(input): m_sw = input: End Property
+
+  Public Property Get Animate(): Animate = m_animate: End Property
+  Public Property Let Animate(input): m_animate = input: End Property
+
+  Public default Function init(primary, prim, sw, animate)
+    Set m_primary = primary
+    Set m_prim = prim
+    m_sw = sw
+    m_animate = animate
+
+    Set Init = Me
+  End Function
+End Class
+
+Set ST20 = (new StandupTarget)(sw20, psw20,20, 0)
+Set ST21 = (new StandupTarget)(sw21, psw21,21, 0)
+Set ST22 = (new StandupTarget)(sw22, psw22,22, 0)
+Set ST23 = (new StandupTarget)(sw23, psw23,23, 0)
+Set ST25 = (new StandupTarget)(sw25, psw25,25, 0)
+Set ST26 = (new StandupTarget)(sw26, psw26,26, 0)
+Set ST27 = (new StandupTarget)(sw27, psw27,27, 0)
+Set ST38 = (new StandupTarget)(sw38, psw38,38, 0)
+Set ST39 = (new StandupTarget)(sw39, psw39,39, 0)
+Set ST40 = (new StandupTarget)(sw40, psw40,40, 0)
 
 Dim STArray
 STArray = Array(ST20, ST21, ST22, ST23, ST25, ST26, ST27, ST38, ST39, ST40)
@@ -2185,10 +2243,10 @@
 	i = STArrayID(switch)
 
 	PlayTargetSound
-	STArray(i)(3) =  STCheckHit(Activeball,STArray(i)(0))
+	STArray(i).animate =  STCheckHit(Activeball,STArray(i).primary)
 
-	If STArray(i)(3) <> 0 Then
-		DTBallPhysics Activeball, STArray(i)(0).orientation, STMass
+	If STArray(i).animate <> 0 Then
+		DTBallPhysics Activeball, STArray(i).primary.orientation, STMass
 	End If
 	DoSTAnim
 End Sub
@@ -2196,7 +2254,7 @@
 Function STArrayID(switch)
 	Dim i
 	For i = 0 to uBound(STArray) 
-		If STArray(i)(2) = switch Then STArrayID = i:Exit Function 
+		If STArray(i).sw = switch Then STArrayID = i:Exit Function 
 	Next
 End Function
 
@@ -2225,7 +2283,7 @@
 Sub DoSTAnim()
 	Dim i
 	For i=0 to Ubound(STArray)
-		STArray(i)(3) = STAnimate(STArray(i)(0),STArray(i)(1),STArray(i)(2),STArray(i)(3))
+		STArray(i).animate = STAnimate(STArray(i).primary,STArray(i).prim,STArray(i).sw,STArray(i).animate)
 	Next
 End Sub
 
